#!/bin/bash -e 

Args=($@)
nmbrArg=$#
lastArg=0
declare -a Array
urlNumber=0
FORMAT=rqst

init() {
#QQEDIR	
	if [ -z $1 ]
	then	     
                if [ -e "./.fetch4merc" ]
                then
                        QQEDIR=$(cat ./.fetch4merc | grep QQEDIR | awk '{a=$3; print a}')
                        if [ -z $QQEDIR  ]
                        then
                                mkdir ./.fetch4me
                                QQEDIR="fetch4me"
                        fi
                else
                        mkdir ./.fetch4me
                        QQEDIR="fetch4me"
                fi
		
	else		
		if [ $1 = "-w" ]
		then
			QQEDIR=$2
			lastArg=2
			if [ -z $3 ]
			then
				REFERER=""
				lastArg=2	
			else
				if [ $3 = "-r" ]
				then
					REFERER=$4
					lastArg=4
				fi					
			fi
		else 	
			if [ -e "./.fetch4merc" ]
               		then
                        	QQEDIR=$(cat ./.fetch4merc | grep QQEDIR | awk '{a=$3; print a}')
                        	if [ -z $QQEDIR  ]
                        	then
                                	mkdir ./.fetch4me
					QQEDIR="fetch4me"
                        	fi
                	else
                        	mkdir ./.fetch4me
				QQEDIR="fetch4me"
                	fi
			
			if [ $1 = "-r" ]
			then
				REFERER=$2
				lastArg=2
			else
				REFERER=""
			fi
			
			if [ $1 = "-kill" ]
			then	
				if [ -e ./.$QQEDIR/.daemonID ]
				then
					pid=$(cat ./.$QQEDIR/.daemonID)
					kill -9 $pid
					rm ./.$QQEDIR/.daemonID
					echo "Daemon quit"
					exit 0
				else
					echo "Error: daemon isn't exist"
					exit 1
				fi
			fi
		fi
	fi
		
#GETELEMFUNC
	if [ -e "./.fetch4merc" ]
	then
		GETELEMFUNC=$(cat ./.fetch4merc | grep GETELEMFUNC | awk '{a=$3; print a}')
		if [ -z $GETELEMFUNC ]
		then
			GETELEMFUNC="wget"
		fi
	else
		GETELEMFUNC="wget"
	fi

	urlNumber=$(($nmbrArg-$lastArg))
	DLDPATH="./Downloads/fetched4you"
	
	if [ -e "./Downloads" ]
	then
		if [ ! -e "$DLDPATH" ]
		then
			mkdir $DLDPATH
		fi
	else
		mkdir ./Downloads
		mkdir $DLDPATH
		fi
}

showUsage() {
	echo Error!
	echo Usage:
	echo "fetch4me [-w <dir>] [-r <referer>] (<url>)*"
	echo To kill daemon:
	echo "fetch4me -kill"
}

createRequests() {
	if [ ! -e "./.$QQEDIR" ]
	then
		mkdir ./.$QQEDIR

	fi	
	for ((i=0;i<$urlNumber;i++))
	do
		url=${Args[$lastArg]}
		lastArg=$((lastArg+1))
		tempName=$(echo $url | sed 's/\//_/g' | sed 's/://g')
		#echo $tempName
		echo "$url $REFERER">.$QQEDIR/$tempName.$FORMAT
		echo ".$QQEDIR/$tempName.$FORMAT ">>.$QQEDIR/.queue
	done
}

starting() {
	
	exec >/dev/null
	exec 2>/dev/null
	
	trap '' TERM
	trap '' HUP
	
	loop &

	echo $!>./.$QQEDIR/.daemonID
}

loop() {
	while true
	do
		downloading
		sleep 3
	done
}

removing() {
	tempQueue=.tempQueue
	if [ -e ./.$QQEDIR/.queue ]
	then
		linesNmbr=$(cat ./.$QQEDIR/.queue | wc -l)
		echo $linesNmbr
		if [ $linesNmbr -gt 1 ]
		then
			linesNmbr=$((linesNmbr-1))
			echo "$(cat ./.$QQEDIR/.queue | tail -$linesNmbr)">./.$QQEDIR/$tempQueue
			cp ./.$QQEDIR/$tempQueue ./.$QQEDIR/.queue
			rm ./.$QQEDIR/$tempQueue
		elif [ $linesNmbr -eq 1 ]
		then
			rm ./.$QQEDIR/.queue
			touch ./.$QQEDIR/.queue
		fi
	fi
}

downloading() {

#	trap '' TERM
#	trap '' HUP        
	
	if [ $(cat ./.$QQEDIR/.queue | grep ".$FORMAT")="" ] 
	then        	
		echo "Nothing to Download :("
	else
		Array=($(cat ./.$QQEDIR/.queue | grep ".$FORMAT") )
		nmbrOfArr=${#Array[@]}
		echo Ice, Baby!!!	
		for ((i=0;i<$nmbrOfArr;i++))
		do
			urlReff=$(awk '{a=$2; print a'} ${Array[$i]})
			urlAddr=$(awk '{a=$1; print a'} ${Array[$i]})	
			echo "Downloading $urlAddr with refere $urlReff">./.$QQEDIR/.status
			if $GETELEMFUNC -q -c -P $DLDPATH/$urlReff/$urlAddr --referer=$urlReff $urlAddr
			then
				echo "$(date) $urlReff $urlAddr finished">>./.$QQEDIR/.finished
				removing
			else
				echo "$(date) $urlRedd $urlAddr failed">>./.$QQEDIR/.finished
			fi
			echo "">./.$QQEDIR/.status
			rm ${Array[$i]}
			unset Array[$i]	
		done	 
	fi
}


work() {
	
	if [ -e "./.$QQEDIR/.daemonID" ]
	then
		if [ $urlNumber -eq 0 ]
		then
			showUsage 
		else
			echo "Create only Requests, because Daemon is already working"
			createRequests 	
		fi
	else
		echo "Create Requests and Starting Daemon"
		createRequests
		starting 
	fi
}	

init "$@"
work
